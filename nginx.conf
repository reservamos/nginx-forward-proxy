worker_processes auto;

events {
  worker_connections 40000;
}

http {
  include mime.types;

  # Define la URL de Slack utilizando una variable de entorno
  set $slack_url $SLACK_WEBHOOK_URL;

  server {
    listen 3128;
    
    access_log /dev/stdout;
    error_log  /dev/stderr;

    resolver 1.1.1.1 ipv6=off;

    proxy_connect;
    proxy_connect_allow           443 563;
    proxy_connect_connect_timeout 55s;
    proxy_connect_read_timeout    55s;
    proxy_connect_send_timeout    55s;

    location / {
      auth_basic           "Complete area";  
      auth_basic_user_file /usr/local/nginx/.htpasswd;

      proxy_http_version 1.1;
      proxy_set_header Host $host;

      proxy_intercept_errors on;  # Habilita la interceptación de errores

      error_page 500 502 503 504 /error;  # Redirige a /error en caso de error
      proxy_pass http://$host;
    }

    location = /error {
      internal;

      content_by_lua_block {
        local http = require "resty.http"
        local httpc = http.new()

        local slack_url = os.getenv("SLACK_WEBHOOK_URL")

        local res, err = httpc:request_uri(slack_url, {
          method = "POST",
          body = '{"text":"Error en el servidor proxy. Código: " .. ngx.status}',
          headers = {
            ["Content-Type"] = "application/json"
          }
        })

        if not res then
          ngx.log(ngx.ERR, "Failed to send message to Slack: ", err)
        end
      }
    }
  }
}
